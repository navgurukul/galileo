{"version":3,"file":"request.js","sourceRoot":"","sources":["../src/request.ts"],"names":[],"mappings":"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","sourcesContent":["import { Base, BaseOptions, Headers } from './base'\nimport { Response } from './response'\nimport { splice } from './support'\nimport PopsicleError from './error'\n\nexport interface DefaultsOptions extends BaseOptions {\n  method?: string\n  timeout?: number\n  body?: any\n  use?: Middleware[]\n  transport?: TransportOptions\n}\n\nexport interface RequestOptions extends DefaultsOptions {\n  url: string\n  events?: Events\n}\n\nexport interface RequestJSON {\n  url: string\n  headers: Headers\n  body: any\n  timeout: number\n  method: string\n}\n\nexport interface Events {\n  abort: EventList<(this: Request) => void>\n  progress: EventList<(this: Request) => void>\n}\n\nexport interface TransportOptions {\n  open: (request: Request) => Promise<Response>\n  abort?: (request: Request) => any\n  use?: Middleware[]\n}\n\nexport type EventList <T extends (...args: any[]) => void> = Array<EventFn<T>>\nexport type EventFn <T extends (...args: any[]) => void> = T & { listener?: T }\nexport type Middleware = (request: Request, next: () => Promise<Response>) => Response | Promise<Response>\n\nexport class Request extends Base {\n  method: string\n  timeout: number\n  body: any\n  transport: TransportOptions\n  events: Events\n  middleware: Middleware[] = []\n\n  opened = false\n  aborted = false\n  uploaded = 0\n  downloaded = 0\n  uploadedBytes: number\n  downloadedBytes: number\n  uploadLength: number\n  downloadLength: number\n\n  _raw: any\n  _promise: Promise<Response>\n\n  constructor (options: RequestOptions) {\n    super(options)\n\n    this.timeout = (options.timeout | 0)\n    this.method = (options.method || 'GET').toUpperCase()\n    this.body = options.body\n    this.events = options.events || Object.create(null)\n\n    // Extend to avoid mutations of the transport object.\n    this.transport = Object.assign({}, options.transport)\n\n    // Automatically `use` default middleware functions.\n    this.use(options.use || this.transport.use)\n\n    // External promise representation, resolves _after_ middleware has been\n    // attached by relying on promises always resolving on the \"next tick\".\n    this._promise = Promise.resolve().then(() => exec(this))\n\n    // Attach an abort listener.\n    this.once('abort', () => {\n      if (this.completed === 1) {\n        return\n      }\n\n      this.aborted = true\n    })\n  }\n\n  error (message: string, code: string, original?: Error): PopsicleError {\n    return new PopsicleError(message, code, original, this)\n  }\n\n  then <T> (\n    onFulfilled?: (response: Response) => T | PromiseLike<T>,\n    onRejected?: (error: PopsicleError) => T | PromiseLike<T>\n  ): Promise<T> {\n    return this._promise.then(onFulfilled, onRejected)\n  }\n\n  catch <T> (onRejected: (error: PopsicleError) => T): Promise<T> {\n    return this._promise.then(null, onRejected)\n  }\n\n  exec (cb: (error: PopsicleError | null, response?: Response) => void) {\n    this.then(res => cb(null, res), cb)\n  }\n\n  toOptions (): RequestOptions {\n    return {\n      url: this.url,\n      method: this.method,\n      body: this.body,\n      transport: this.transport,\n      timeout: this.timeout,\n      rawHeaders: this.rawHeaders,\n      use: this.middleware,\n      events: this.events\n    }\n  }\n\n  toJSON (): RequestJSON {\n    return {\n      url: this.url,\n      method: this.method,\n      headers: this.headers,\n      body: this.body,\n      timeout: this.timeout\n    }\n  }\n\n  clone () {\n    return new Request(this.toOptions())\n  }\n\n  use (fn: Middleware | Middleware[]) {\n    if (Array.isArray(fn)) {\n      this.middleware.push(...fn)\n    } else {\n      this.middleware.push(fn)\n    }\n\n    return this\n  }\n\n  on (event: keyof Events, fn: (this: this, ...args: any[]) => void) {\n    if (Object.prototype.hasOwnProperty.call(this.events, event)) {\n      this.events[event].push(fn)\n    } else {\n      this.events[event] = [fn]\n    }\n\n    return this\n  }\n\n  off (event: keyof Events, fn: (this: this, ...args: any[]) => void) {\n    if (Object.prototype.hasOwnProperty.call(this.events, event)) {\n      const list = this.events[event]\n      let index = -1\n\n      for (let i = 0; i < list.length; i++) {\n        if (list[i] === fn || list[i].listener === fn) {\n          index = i\n          break\n        }\n      }\n\n      if (index > -1) {\n        if (list.length === 1) {\n          delete this.events[event]\n        } else {\n          splice(this.events[event], index)\n        }\n      }\n    }\n\n    return this\n  }\n\n  once (event: keyof Events, fn: (this: this, ...args: any[]) => void) {\n    return this.on(event, wrapOnce(this, event, fn))\n  }\n\n  emit (event: keyof Events, ...args: any[]) {\n    if (!Object.prototype.hasOwnProperty.call(this.events, event)) {\n      return this\n    }\n\n    const listeners = this.events[event]\n\n    if (listeners.length === 1) {\n      args.length === 0 ? listeners[0].call(this) : listeners[0].apply(this, args)\n    } else {\n      for (const listener of listeners.slice()) {\n        args.length === 0 ? listener.call(this) : listener.apply(this, args)\n      }\n    }\n\n    return this\n  }\n\n  abort () {\n    return this.emit('abort')\n  }\n\n  handle () {\n    this.opened = true\n\n    // Catch URLs that will cause the request to hang indefinitely in\n    // CORS disabled environments. E.g. Atom Editor.\n    if (/^https?\\:\\/*(?:[~#\\\\\\?;\\:]|$)/.test(this.url)) {\n      return Promise.reject(this.error(`Refused to connect to invalid URL \"${this.url}\"`, 'EINVALID'))\n    }\n\n    const { timeout } = this\n    let timer: any\n\n    // Resolve the transport request with timeout rejection.\n    const result = new Promise((resolve, reject) => {\n      if (timeout > 0) {\n        timer = setTimeout(\n          () => {\n            // Reject _before_ aborting the request.\n            reject(this.error(`Timeout of ${timeout}ms exceeded`, 'ETIMEOUT'))\n\n            // Abort the transport layer.\n            this.abort()\n          },\n          timeout\n        )\n      }\n\n      this.once('abort', () => {\n        // Emit a final progress event.\n        this.emit('progress')\n\n        // Reject _before_ aborting the request (which may `resolve`).\n        reject(this.error('Request aborted', 'EABORT'))\n\n        // Pass the abort onto the transport layer.\n        if (this.transport.abort) {\n          this.transport.abort(this)\n        }\n      })\n\n      // Wrap the transport layer to defer resolving the outer promise, allows\n      // other conditions to possibly `reject` over the transport layer.\n      Promise.resolve(this.transport.open(this)).then(\n        (res) => resolve(res),\n        (err) => reject(err)\n      )\n    })\n\n    // Clear the timeout on resolve, if enabled.\n    if (timeout > 0) {\n      result.then(\n        () => clearTimeout(timer),\n        () => clearTimeout(timer)\n      )\n    }\n\n    return result\n  }\n\n  get completed () {\n    return (this.uploaded + this.downloaded) / 2\n  }\n\n  get completedBytes () {\n    return this.uploadedBytes + this.downloadedBytes\n  }\n\n  get totalBytes () {\n    return this.uploadLength + this.downloadLength\n  }\n\n  _setUploadedBytes (bytes: number, uploaded?: number) {\n    if (bytes !== this.uploadedBytes) {\n      this.uploaded = uploaded || bytes / this.uploadLength\n      this.uploadedBytes = bytes\n      this.emit('progress')\n    }\n  }\n\n  _setDownloadedBytes (bytes: number, downloaded?: number) {\n    if (bytes !== this.downloadedBytes) {\n      this.downloaded = downloaded || bytes / this.downloadLength\n      this.downloadedBytes = bytes\n      this.emit('progress')\n    }\n  }\n\n}\n\n/**\n * Create a `once` function wrapper.\n */\nfunction wrapOnce (target: Request, event: keyof Events, fn: (...args: any[]) => void) {\n  let fired = false\n\n  const g: EventFn<typeof fn> = (...args: any[]) => {\n    if (!fired) {\n      fired = true\n      target.off(event, fn)\n      args.length === 0 ? fn.call(target) : fn.apply(target, args)\n    }\n  }\n\n  g.listener = fn\n\n  return g\n}\n\n/**\n * Compose the API request with middleware.\n */\nfunction exec (req: Request) {\n  let index = -1\n\n  function dispatch (pos: number): Promise<Response> {\n    if (pos <= index) {\n      throw new TypeError('`next()` called multiple times')\n    }\n\n    // Avoid proceeding when the request was aborted.\n    if (req.aborted) {\n      return Promise.reject(req.error('Request aborted', 'EABORT'))\n    }\n\n    index = pos\n\n    const fn = req.middleware[pos] || (() => req.handle())\n\n    return new Promise<Response>(resolve => {\n      return resolve(fn(req, function next () {\n        return dispatch(pos + 1)\n      }))\n    })\n  }\n\n  return dispatch(0)\n}\n"]}