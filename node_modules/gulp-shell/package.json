{
  "_args": [
    [
      {
        "raw": "gulp-shell@^0.5.2",
        "scope": null,
        "escapedName": "gulp-shell",
        "name": "gulp-shell",
        "rawSpec": "^0.5.2",
        "spec": ">=0.5.2 <0.6.0",
        "type": "range"
      },
      "/home/arch/galileo"
    ]
  ],
  "_from": "gulp-shell@>=0.5.2 <0.6.0",
  "_id": "gulp-shell@0.5.2",
  "_inCache": true,
  "_location": "/gulp-shell",
  "_nodeVersion": "5.4.1",
  "_npmUser": {
    "name": "sun-zheng-an",
    "email": "sun.zheng.an.0@gmail.com"
  },
  "_npmVersion": "3.5.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "gulp-shell@^0.5.2",
    "scope": null,
    "escapedName": "gulp-shell",
    "name": "gulp-shell",
    "rawSpec": "^0.5.2",
    "spec": ">=0.5.2 <0.6.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-shell/-/gulp-shell-0.5.2.tgz",
  "_shasum": "a4959ca0651ad1c7bbfe70b2d0adbbb4e1aea98d",
  "_shrinkwrap": null,
  "_spec": "gulp-shell@^0.5.2",
  "_where": "/home/arch/galileo",
  "author": {
    "name": "Sun Zheng'an"
  },
  "bugs": {
    "url": "https://github.com/sun-zheng-an/gulp-shell/issues"
  },
  "dependencies": {
    "async": "^1.5.0",
    "gulp-util": "^3.0.7",
    "lodash": "^4.0.0",
    "through2": "^2.0.0"
  },
  "description": "A handy command line interface for gulp",
  "devDependencies": {
    "chai": "~3.4.0",
    "coveralls": "~2.11.4",
    "eslint": "~1.10.3",
    "gulp": "~3.9.0",
    "istanbul": "~0.4.0",
    "mocha": "~2.3.3",
    "mocha-lcov-reporter": "~1.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "a4959ca0651ad1c7bbfe70b2d0adbbb4e1aea98d",
    "tarball": "https://registry.npmjs.org/gulp-shell/-/gulp-shell-0.5.2.tgz"
  },
  "gitHead": "b53abf93b42bd34cb05663d9fc436655da0dd6bd",
  "homepage": "https://github.com/sun-zheng-an/gulp-shell",
  "keywords": [
    "gulpplugin",
    "gulp",
    "shell",
    "command"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "sun-zheng-an",
      "email": "sun.zheng.an.0@gmail.com"
    }
  ],
  "name": "gulp-shell",
  "optionalDependencies": {},
  "readme": "# gulp-shell\n\n[![NPM version][npm-image]][npm-url]\n[![Build Status][travis-image]][travis-url]\n[![Coveralls Status][coveralls-image]][coveralls-url]\n[![Dependency Status][david-dm-image]][david-dm-url]\n[![Downloads][downloads-image]][npm-url]\n\n[npm-url]:         https://npmjs.org/package/gulp-shell\n[npm-image]:       https://img.shields.io/npm/v/gulp-shell.svg\n[travis-url]:      https://travis-ci.org/sun-zheng-an/gulp-shell\n[travis-image]:    https://img.shields.io/travis/sun-zheng-an/gulp-shell/master.svg\n[coveralls-url]:   https://coveralls.io/r/sun-zheng-an/gulp-shell\n[coveralls-image]: https://img.shields.io/coveralls/sun-zheng-an/gulp-shell/master.svg\n[david-dm-url]:    https://david-dm.org/sun-zheng-an/gulp-shell\n[david-dm-image]:  https://img.shields.io/david/sun-zheng-an/gulp-shell.svg\n[downloads-image]: https://img.shields.io/npm/dm/gulp-shell.svg\n\n> A handy command line interface for gulp\n\n## Installation\n\n```shell\nnpm install --save-dev gulp-shell\n```\n\n## Usage\n\n```js\nvar gulp  = require('gulp')\nvar shell = require('gulp-shell')\n\ngulp.task('example', function () {\n  return gulp.src('*.js', {read: false})\n    .pipe(shell([\n      'echo <%= f(file.path) %>',\n      'ls -l <%= file.path %>'\n    ], {\n      templateData: {\n        f: function (s) {\n          return s.replace(/$/, '.bak')\n        }\n      }\n    }))\n})\n```\n\nIf you just want to execute a series of commands only once, ~~starting the stream with `gulp.src('')`~~ should do the trick. However, [this is an anti-pattern](https://github.com/sun-zheng-an/gulp-shell/issues/55), and **it won't work in `gulp 4.0`** .\n\nOr you can use this shorthand:\n\n```js\ngulp.task('shorthand', shell.task([\n  'echo hello',\n  'echo world'\n]))\n```\n\nYou can find more examples in the [gulpfile][] of this project.\n\n[gulpfile]: https://github.com/sun-zheng-an/gulp-shell/blob/master/gulpfile.js\n\n## API\n\n### shell(commands, options) or shell.task(commands, options)\n\n#### commands\n\ntype: `Array` or `String`\n\nA command can be a [template][] which can be interpolated by some [file][] info (e.g. `file.path`).\n\n[template]: http://lodash.com/docs#template\n[file]:     https://github.com/wearefractal/vinyl\n\n#### options.verbose\n\ntype: `Boolean`\n\ndefault: `false`\n\nSet to `true` to print the command(s) to stdout as they are executed\n\n#### options.errorMessage\n\ntype: `String`\n\ndefault: ``Command `<%= command %>` failed with exit code <%= error.code %>``\n\nYou can add a custom error message for when the command fails.\nThis can be a [template][] which can be interpolated with the current `command`, some [file][] info (e.g. `file.path`) and some [error][] info (e.g. `error.code`).\n\n[error]: http://nodejs.org/api/child_process.html#child_process_child_process_exec_command_options_callback\n\n#### options.ignoreErrors\n\ntype: `Boolean`\n\ndefault: `false`\n\nBy default, it will emit an `error` event when the command finishes unsuccessfully.\n\n#### options.quiet\n\ntype: `Boolean`\n\ndefault: `false`\n\nBy default, it will print the command output.\n\n#### options.interactive\n\ntype: `Boolean`\n\ndefault: `false`\n\nTurn it on only if you need to run some interactive commands.\n\n#### options.cwd\n\ntype: `String`\n\ndefault: [`process.cwd()`](http://nodejs.org/api/process.html#process_process_cwd)\n\nSets the current working directory for the command. This can be a [template][] which can be interpolated by some [file][] info (e.g. `file.path`).\n\n[template]: http://lodash.com/docs#template\n\n#### options.templateData\n\ntype: `Object`\n\nThe data that can be accessed in template.\n\n#### options.maxBuffer\n\ntype: `Number`\n\ndefault: 16MB(16 * 1024 * 1024)\n\nYou won't need to set this option unless you encounter a \"stdout maxBuffer exceeded\" error.\n\n#### options.timeout\n\ntype: `Number`\n\ndefault: undefined (no timeout)\n\nThe maximum amount of time in milliseconds the process is allowed to run.\n\n#### options.env\n\ntype: `Object`\n\nBy default, all the commands will be executed in an environment with all the variables in [`process.env`](http://nodejs.org/api/process.html#process_process_env) and `PATH` prepended by `./node_modules/.bin` (allowing you to run executables in your Node's dependencies).\n\nYou can override any environment variables with this option.\n\nFor example, setting it to `{PATH: process.env.PATH}` will reset the `PATH` if the default one brings your some troubles.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sun-zheng-an/gulp-shell.git"
  },
  "scripts": {
    "coveralls": "gulp coveralls",
    "test": "gulp test lint"
  },
  "version": "0.5.2"
}
