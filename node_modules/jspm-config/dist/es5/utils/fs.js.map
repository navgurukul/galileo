{"version":3,"file":"fs.js","sourceRoot":"/@unional/jspm-config/","sources":["utils/fs.ts"],"names":[],"mappings":";AAAA,gCAAiC;AACjC,qCAAsC;AACtC,iCAAkC;AAClC,oCAAsC;AACtC,kCAAoC;AACpC,+BAAiC;AAEjC,IAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,CAAA;AAI9B;;GAEG;AACH,mBAA0B,QAAgB,EAAE,IAAY,EAAE,UAAmB;IAC3E,EAAE,CAAC,CAAC,QAAQ,KAAK,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,EAAE,CAAA;IACX,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,CAAA;AACzC,CAAC;AAND,8BAMC;AAED;;GAEG;AACH,kBAAyB,IAAY,EAAE,UAA2B;IAA3B,2BAAA,EAAA,kBAA2B;IAChE,MAAM,CAAC,gBAAQ,CAAC,IAAI,EAAE,MAAM,CAAC;SAC1B,IAAI,CAAC,QAAQ,CAAC;SACd,IAAI,CAAC,UAAA,QAAQ,IAAI,OAAA,SAAS,CAAC,QAAQ,EAAE,IAAI,EAAE,UAAU,CAAC,EAArC,CAAqC,CAAC,CAAA;AAC5D,CAAC;AAJD,4BAIC;AAEY,QAAA,QAAQ,GAAe,MAAM,CAAC,EAAE,EAAE,OAAO,CAAyB,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAA","sourcesContent":["import * as fs from 'graceful-fs'\nimport * as Promise from 'any-promise'\nimport * as thenify from 'thenify'\nimport stripBom = require('strip-bom')\nimport parse = require('parse-json')\nimport Throat = require('throat')\n\nconst throat = Throat(Promise)\n\nexport type ReadFileOp = (path: string, encoding: string) => Promise<string>\n\n/**\n * Parse a string as JSON.\n */\nexport function parseJson(contents: string, path: string, allowEmpty: boolean): any {\n  if (contents === '' && allowEmpty) {\n    return {}\n  }\n\n  return parse(contents, undefined, path)\n}\n\n/**\n * Read JSON from a path.\n */\nexport function readJson(path: string, allowEmpty: boolean = false): Promise<any> {\n  return readFile(path, 'utf8')\n    .then(stripBom)\n    .then(contents => parseJson(contents, path, allowEmpty))\n}\n\nexport const readFile: ReadFileOp = throat(10, thenify<string, string, string>(fs.readFile))\n"]}