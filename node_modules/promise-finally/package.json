{
  "_args": [
    [
      {
        "raw": "promise-finally@^3.0.0",
        "scope": null,
        "escapedName": "promise-finally",
        "name": "promise-finally",
        "rawSpec": "^3.0.0",
        "spec": ">=3.0.0 <4.0.0",
        "type": "range"
      },
      "/home/arch/galileo/node_modules/typings"
    ]
  ],
  "_from": "promise-finally@>=3.0.0 <4.0.0",
  "_id": "promise-finally@3.0.0",
  "_inCache": true,
  "_location": "/promise-finally",
  "_nodeVersion": "6.9.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/promise-finally-3.0.0.tgz_1482028974901_0.011417723493650556"
  },
  "_npmUser": {
    "name": "blakeembrey",
    "email": "hello@blakeembrey.com"
  },
  "_npmVersion": "4.0.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "promise-finally@^3.0.0",
    "scope": null,
    "escapedName": "promise-finally",
    "name": "promise-finally",
    "rawSpec": "^3.0.0",
    "spec": ">=3.0.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/typings",
    "/typings-core"
  ],
  "_resolved": "https://registry.npmjs.org/promise-finally/-/promise-finally-3.0.0.tgz",
  "_shasum": "ddd5d0f895432b1206ceb8da1275064d18e7aa23",
  "_shrinkwrap": null,
  "_spec": "promise-finally@^3.0.0",
  "_where": "/home/arch/galileo/node_modules/typings",
  "author": {
    "name": "Blake Embrey",
    "email": "hello@blakeembrey.com",
    "url": "http://blakeembrey.me"
  },
  "bugs": {
    "url": "https://github.com/blakeembrey/promise-finally/issues"
  },
  "dependencies": {},
  "description": "Simple wrapper to run promise \"finally\" logic",
  "devDependencies": {
    "blue-tape": "^1.0.0",
    "bluebird": "^3.0.5",
    "istanbul": "^0.4.3",
    "tap-dot": "^1.0.0",
    "tslint": "^3.10.2",
    "tslint-config-standard": "^1.0.0",
    "typescript": "^2.0.3",
    "typings": "^1.0.4"
  },
  "directories": {},
  "dist": {
    "shasum": "ddd5d0f895432b1206ceb8da1275064d18e7aa23",
    "tarball": "https://registry.npmjs.org/promise-finally/-/promise-finally-3.0.0.tgz"
  },
  "files": [
    "dist/",
    "typings.json",
    "LICENSE"
  ],
  "gitHead": "7e01cdd1014051afb7d16aeef8e5db2baa0a0c31",
  "homepage": "https://github.com/blakeembrey/promise-finally",
  "keywords": [
    "promise",
    "finally",
    "done",
    "always",
    "complete",
    "cleanup"
  ],
  "license": "MIT",
  "main": "dist/promise-finally.js",
  "maintainers": [
    {
      "name": "blakeembrey",
      "email": "hello@blakeembrey.com"
    }
  ],
  "name": "promise-finally",
  "optionalDependencies": {},
  "readme": "# Promise Finally\n\n[![NPM version][npm-image]][npm-url]\n[![NPM downloads][downloads-image]][downloads-url]\n[![Build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n\n> Simple wrapper to run promise \"finally\" logic.\n\n## Installation\n\n```\nnpm install promise-finally --save\n```\n\n## Usage\n\n```js\nimport promiseFinally from 'promise-finally'\n\nconst p = Promise.resolve('something')\n\npromiseFinally(p, () => ...)\n```\n\n## License\n\nMIT\n\n[npm-image]: https://img.shields.io/npm/v/promise-finally.svg?style=flat\n[npm-url]: https://npmjs.org/package/promise-finally\n[downloads-image]: https://img.shields.io/npm/dm/promise-finally.svg?style=flat\n[downloads-url]: https://npmjs.org/package/promise-finally\n[travis-image]: https://img.shields.io/travis/blakeembrey/promise-finally.svg?style=flat\n[travis-url]: https://travis-ci.org/blakeembrey/promise-finally\n[coveralls-image]: https://img.shields.io/coveralls/blakeembrey/promise-finally.svg?style=flat\n[coveralls-url]: https://coveralls.io/r/blakeembrey/promise-finally?branch=master\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/blakeembrey/promise-finally.git"
  },
  "scripts": {
    "build": "npm run build-ts",
    "build-ts": "rm -rf dist/ && tsc",
    "lint": "tslint \"src/**/*.ts\"",
    "prepublish": "typings install && npm run build",
    "test": "npm run lint && npm run build && npm run test-cov",
    "test-cov": "istanbul cover --print none -x dist/**/*.spec.js blue-tape -- dist/**/*.spec.js | tap-dot",
    "test-spec": "blue-tape dist/**/*.spec.js"
  },
  "typings": "dist/promise-finally.d.ts",
  "version": "3.0.0"
}
