{"version":3,"file":"view.js","sourceRoot":"","sources":["../src/view.ts"],"names":[],"mappings":";;AAAA,qCAAsC;AACtC,iCAAyC;AACzC,uCAA+D;AAC/D,iCAA2B;AAI3B,mBAA2B,GAAW,EAAE,OAAoB;IAC1D,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO;QACjB,IAAA,gEAAI,CAAyC;QACrD,IAAM,IAAI,GAAG,aAAW,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,SAAI,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAG,CAAA;QAE1F,MAAM,CAAC,OAAO,CAAC,iBAAY,CAAC,cAAO,CAAC,YAAE,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC,CAAA;IAC7D,CAAC,CAAC,CAAA;AACJ,CAAC;AAPD,8BAOC;AAED,sBAA8B,GAAW,EAAE,OAAoB;IAC7D,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO;QACjB,IAAA,gEAAI,CAAyC;QACrD,IAAI,IAAI,GAAG,aAAW,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,SAAI,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,cAAW,CAAA;QAEjG,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,IAAI,IAAI,MAAI,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAG,CAAA;QAChD,CAAC;QAED,MAAM,CAAC,OAAO,CAAC,iBAAY,CAAC,cAAO,CAAC,YAAE,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC,CAAA;IAC7D,CAAC,CAAC,CAAA;AACJ,CAAC;AAXD,oCAWC","sourcesContent":["import { joinUrl } from './utils/path'\nimport { readJsonFrom } from './utils/fs'\nimport { expandRegistry, parseDependency } from './utils/parse'\nimport rc from './utils/rc'\n\nexport interface ViewOptions {}\n\nexport function viewEntry (raw: string, options: ViewOptions) {\n  return new Promise((resolve) => {\n    const { meta } = parseDependency(expandRegistry(raw))\n    const path = `entries/${encodeURIComponent(meta.source)}/${encodeURIComponent(meta.name)}`\n\n    return resolve(readJsonFrom(joinUrl(rc.registryURL, path)))\n  })\n}\n\nexport function viewVersions (raw: string, options: ViewOptions) {\n  return new Promise((resolve) => {\n    const { meta } = parseDependency(expandRegistry(raw))\n    let path = `entries/${encodeURIComponent(meta.source)}/${encodeURIComponent(meta.name)}/versions`\n\n    if (meta.version) {\n      path += `/${encodeURIComponent(meta.version)}`\n    }\n\n    return resolve(readJsonFrom(joinUrl(rc.registryURL, path)))\n  })\n}\n"]}