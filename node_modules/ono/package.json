{
  "_args": [
    [
      {
        "raw": "ono@^2.2.1",
        "scope": null,
        "escapedName": "ono",
        "name": "ono",
        "rawSpec": "^2.2.1",
        "spec": ">=2.2.1 <3.0.0",
        "type": "range"
      },
      "/home/arch/galileo/node_modules/json-schema-ref-parser"
    ]
  ],
  "_from": "ono@>=2.2.1 <3.0.0",
  "_id": "ono@2.2.4",
  "_inCache": true,
  "_location": "/ono",
  "_nodeVersion": "7.2.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/ono-2.2.4.tgz_1484489471631_0.9819449298083782"
  },
  "_npmUser": {
    "name": "bigstickcarpet",
    "email": "bigstickcarpet@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ono@^2.2.1",
    "scope": null,
    "escapedName": "ono",
    "name": "ono",
    "rawSpec": "^2.2.1",
    "spec": ">=2.2.1 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/json-schema-ref-parser",
    "/swagger-parser",
    "/swagger-parser/json-schema-ref-parser"
  ],
  "_resolved": "https://registry.npmjs.org/ono/-/ono-2.2.4.tgz",
  "_shasum": "f6c1d9ea64da07a54863986535da3de67e502696",
  "_shrinkwrap": null,
  "_spec": "ono@^2.2.1",
  "_where": "/home/arch/galileo/node_modules/json-schema-ref-parser",
  "author": {
    "name": "James Messinger",
    "url": "http://jamesmessinger.com"
  },
  "bugs": {
    "url": "https://github.com/bigstickcarpet/ono/issues"
  },
  "dependencies": {},
  "description": "Throw better errors.",
  "devDependencies": {
    "bower": "^1.7.7",
    "chai": "^3.5.0",
    "codacy-coverage": "^2.0.0",
    "coveralls": "^2.11.6",
    "eslint": "^3.12.2",
    "eslint-config-modular": "^2.0.1",
    "http-server": "^0.9.0",
    "istanbul": "^0.4.2",
    "karma": "^1.4.0",
    "karma-chai": "^0.1.0",
    "karma-chrome-launcher": "^2.0.0",
    "karma-cli": "^1.0.1",
    "karma-coverage": "^1.1.1",
    "karma-firefox-launcher": "^1.0.0",
    "karma-ie-launcher": "^1.0.0",
    "karma-mocha": "^1.3.0",
    "karma-phantomjs-launcher": "^1.0.0",
    "karma-safari-launcher": "^1.0.0",
    "karma-sauce-launcher": "^1.1.0",
    "karma-verbose-reporter": "0.0.4",
    "mocha": "^3.2.0",
    "npm-check": "^5.4.0",
    "phantomjs": "^2.1.3",
    "simplifyify": "^3.2.1",
    "version-bump-prompt": "^3.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "f6c1d9ea64da07a54863986535da3de67e502696",
    "tarball": "https://registry.npmjs.org/ono/-/ono-2.2.4.tgz"
  },
  "files": [
    "dist/ono.js",
    "dist/ono.js.map",
    "dist/ono.min.js",
    "dist/ono.min.js.map",
    "lib/index.js"
  ],
  "gitHead": "cec6947960afa452800a81208e4811b78c76db15",
  "homepage": "https://github.com/bigstickcarpet/ono",
  "keywords": [
    "throw",
    "error",
    "errors",
    "exception",
    "printf",
    "format",
    "wrap",
    "inner"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "bigstickcarpet",
      "email": "BigstickCarpet@gmail.com"
    }
  ],
  "name": "ono",
  "optionalDependencies": {},
  "readme": "ono (Oh No!)\n============================\n#### Throw better errors.\n\n[![Build Status](https://api.travis-ci.org/BigstickCarpet/ono.svg)](https://travis-ci.org/BigstickCarpet/ono)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/github/bigstickcarpet/ono?svg=true&failingText=Windows%20build%20failing&passingText=Windows%20build%20passing)](https://ci.appveyor.com/project/BigstickCarpet/ono)\n\n[![Dependencies](https://david-dm.org/BigstickCarpet/ono.svg)](https://david-dm.org/BigstickCarpet/ono)\n[![Coverage Status](https://coveralls.io/repos/BigstickCarpet/ono/badge.svg?branch=master&service=github)](https://coveralls.io/r/BigstickCarpet/ono)\n[![Codacy Score](https://www.codacy.com/project/badge/5385a27383174c3089145ec626ffb25b)](https://www.codacy.com/public/jamesmessinger/ono)\n[![Inline docs](http://inch-ci.org/github/BigstickCarpet/ono.svg?branch=master&style=shields)](http://inch-ci.org/github/BigstickCarpet/ono)\n\n[![npm](http://img.shields.io/npm/v/ono.svg)](https://www.npmjs.com/package/ono)\n[![Bower](http://img.shields.io/bower/v/ono.svg)](#bower)\n[![License](https://img.shields.io/npm/l/ono.svg)](LICENSE)\n\n[![Browser Compatibility](https://saucelabs.com/browser-matrix/bigstickcarpet-ono.svg)](https://saucelabs.com/u/bigstickcarpet-ono)\n\nFeatures\n--------------------------\n* Formatted error messages, using Node's [`util.format()`](https://nodejs.org/api/util.html#util_util_format_format) or your own custom formatter\n* Wrap and re-throw an error _without_ losing the original error's message, stack trace, and properties\n* Add custom properties to your errors &mdash; great for error codes, support numbers, help URLs, etc.\n* Errors can be serialized as JSON, including all native and custom properties\n* [Tested](http://bigstickcarpet.github.io/ono/test/index.html) on Node.js and all modern web browsers on Mac, Windows, Linux, iOS, and Android\n\n\nExample\n--------------------------\n\n```javascript\n// Throw an error with formatted message\nthrow ono(\"%s is invalid. Must be at least %d characters.\", username, minLength);\n\n// Wrap and re-throw an error without losing the original error's message and stack\nthrow ono(err, \"An error occurred while saving your changes\");\n\n// Throw an error with custom properties (even a custom method!)\nthrow ono({code: 413, status: \"Invalid data\", retry: function() {...}});\n\n// Add custom properties to an existing Error\nthrow ono(err, {code: 413, status: \"Invalid data\", retry: function() {...}})\n\n// Any of the above can throw a specific Error subtype instead\nthrow ono.range(...);       // RangeError\nthrow ono.syntax(...);      // SyntaxError\nthrow ono.reference(...);   // ReferenceError\n```\n\n\nInstallation\n--------------------------\n#### Node\nInstall using [npm](https://docs.npmjs.com/getting-started/what-is-npm):\n\n```bash\nnpm install ono\n```\n\nThen require it in your code:\n\n```javascript\nvar ono = require(\"ono\");\n```\n\n#### Web Browsers\nInstall using [bower](http://bower.io/):\n\n```bash\nbower install ono\n```\n\nThen reference [`ono.js`](dist/ono.js) or [`ono.min.js`](dist/ono.min.js) in your HTML:\n\n```html\n<script src=\"bower_components/ono/dist/ono.js\"></script>\n```\n\nOr, if you're using AMD (Require.js), then import it into your module:\n\n```javascript\ndefine([\"ono\"], function(ono) { /* your module's code */ })\n```\n\n\nAPI\n--------------------------\n### `ono([err], [props], [message, ...])`\nCreates an [`Error`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error) object with the given properties.\n\n* `err` - _(optional)_ An existing error object. This error's message, stack trace, and properties will be appended to the new error.\n\n* `props` - _(optional)_ An object whose properties will be added to the new error. Properties can be anything, including objects and functions.\n\n* `message` - _(optional)_ The error message string. If it contains placeholders, then pass each placeholder's value as an additional parameter.  See [`ono.formatter`](#onoformatter) for more info.\n\n##### Specific error types\nThe default `ono()` function always creates [`Error`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error) objects, but you can use any of the following methods to explicitly create the corresponding Error subclass.  The method signatures are exactly the same as above.\n\nMethod            | Error type\n:-----------------|:-------------------\n`ono.error()`     |[`Error`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error) (this is just an alternate syntax)\n`ono.eval()`      |[`EvalError`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError)\n`ono.range()`     |[`RangeError`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError)\n`ono.reference()` |[`ReferenceError`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError)\n`ono.syntax()`    |[`SyntaxError`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError)\n`ono.type()`      |[`TypeError`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError)\n`ono.uri()`       |[`URIError`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError)\n\n### `ono.formatter`\nBy default, Node's [`util.format()`](https://nodejs.org/api/util.html#util_util_format_format) function is used (even in browsers) to format error messages and substitute placeholders with their corresponding values. You can set `ono.formatter` to a [third-party formatter](https://www.npmjs.com/package/format) or even your own custom implementation, like this:\n\n```javascript\nono.formatter = function(message) {\n    var params = Array.prototype.slice.call(arguments, 1);\n    return params.reduce(function(message, param, index) {\n        return message.replace(\"$\" + index, param);\n    }, message);\n}\n\nthrow ono(\"$0 must be greater than $1\", 4, 10);\n```\n\n\nContributing\n--------------------------\nI welcome any contributions, enhancements, and bug-fixes.  [File an issue](https://github.com/BigstickCarpet/ono/issues) on GitHub and [submit a pull request](https://github.com/BigstickCarpet/ono/pulls).\n\n#### Building/Testing\nTo build/test the project locally on your computer:\n\n1. __Clone this repo__<br>\n`git clone https://github.com/bigstickcarpet/ono.git`\n\n2. __Install dependencies__<br>\n`npm install`\n\n3. __Run the build script__<br>\n`npm run build`\n\n4. __Run the tests__<br>\n`npm test`\n\n\nLicense\n--------------------------\nOno is 100% free and open-source, under the [MIT license](LICENSE). Use it however you want.\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bigstickcarpet/ono.git"
  },
  "scripts": {
    "build": "simplifyify lib/index.js --outfile dist/ono.js --standalone ono --bundle --debug --minify",
    "bump": "bump --prompt --grep dist/* --tag --push --all",
    "cover": "istanbul cover _mocha --dir coverage/node && npm run build -- --test && npm run karma -- --cover",
    "karma": "karma start --single-run",
    "lint": "eslint lib test/fixtures test/specs --fix",
    "mocha": "mocha",
    "release": "npm run upgrade && npm run build && npm test && npm run bump && npm publish",
    "test": "npm run mocha && npm run karma && npm run lint",
    "upgrade": "npm-check -u && bower update",
    "www": "http-server -o -c-1"
  },
  "version": "2.2.4"
}
