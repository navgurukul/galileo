{
  "_args": [
    [
      {
        "raw": "pumpify@^1.3.3",
        "scope": null,
        "escapedName": "pumpify",
        "name": "pumpify",
        "rawSpec": "^1.3.3",
        "spec": ">=1.3.3 <2.0.0",
        "type": "range"
      },
      "/home/arch/galileo/node_modules/@google-cloud/storage"
    ]
  ],
  "_from": "pumpify@>=1.3.3 <2.0.0",
  "_id": "pumpify@1.3.5",
  "_inCache": true,
  "_location": "/pumpify",
  "_nodeVersion": "4.4.3",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/pumpify-1.3.5.tgz_1465886760120_0.06353981443680823"
  },
  "_npmUser": {
    "name": "mafintosh",
    "email": "mathiasbuus@gmail.com"
  },
  "_npmVersion": "2.15.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "pumpify@^1.3.3",
    "scope": null,
    "escapedName": "pumpify",
    "name": "pumpify",
    "rawSpec": "^1.3.3",
    "spec": ">=1.3.3 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@google-cloud/storage",
    "/gcs-resumable-upload"
  ],
  "_resolved": "https://registry.npmjs.org/pumpify/-/pumpify-1.3.5.tgz",
  "_shasum": "1b671c619940abcaeac0ad0e3a3c164be760993b",
  "_shrinkwrap": null,
  "_spec": "pumpify@^1.3.3",
  "_where": "/home/arch/galileo/node_modules/@google-cloud/storage",
  "author": {
    "name": "Mathias Buus"
  },
  "bugs": {
    "url": "https://github.com/mafintosh/pumpify/issues"
  },
  "dependencies": {
    "duplexify": "^3.1.2",
    "inherits": "^2.0.1",
    "pump": "^1.0.0"
  },
  "description": "Combine an array of streams into a single duplex stream using pump and duplexify",
  "devDependencies": {
    "tape": "^2.13.3",
    "through2": "^0.5.1"
  },
  "directories": {},
  "dist": {
    "shasum": "1b671c619940abcaeac0ad0e3a3c164be760993b",
    "tarball": "https://registry.npmjs.org/pumpify/-/pumpify-1.3.5.tgz"
  },
  "gitHead": "b3eb78d20b310409beca86de87a4fba68bc9656e",
  "homepage": "https://github.com/mafintosh/pumpify",
  "keywords": [
    "pump",
    "duplexify",
    "duplex",
    "streams",
    "stream",
    "pipeline",
    "combine"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mafintosh",
      "email": "mathiasbuus@gmail.com"
    }
  ],
  "name": "pumpify",
  "optionalDependencies": {},
  "readme": "# pumpify\n\nCombine an array of streams into a single duplex stream using [pump](https://github.com/mafintosh/pump) and [duplexify](https://github.com/mafintosh/duplexify).\nIf one of the streams closes/errors all streams in the pipeline will be destroyed.\n\n```\nnpm install pumpify\n```\n\n[![build status](http://img.shields.io/travis/mafintosh/pumpify.svg?style=flat)](http://travis-ci.org/mafintosh/pumpify)\n\n## Usage\n\nPass the streams you want to pipe together to pumpify `pipeline = pumpify(s1, s2, s3, ...)`.\n`pipeline` is a duplex stream that writes to the first streams and reads from the last one.\nStreams are piped together using [pump](https://github.com/mafintosh/pump) so if one of them closes\nall streams will be destroyed.\n\n``` js\nvar pumpify = require('pumpify')\nvar tar = require('tar-fs')\nvar zlib = require('zlib')\nvar fs = require('fs')\n\nvar untar = pumpify(zlib.createGunzip(), tar.extract('output-folder'))\n// you can also pass an array instead\n// var untar = pumpify([zlib.createGunzip(), tar.extract('output-folder')])\n\nfs.createReadStream('some-gzipped-tarball.tgz').pipe(untar)\n```\n\nIf you are pumping object streams together use `pipeline = pumpify.obj(s1, s2, ...)`.\nCall `pipeline.destroy()` to destroy the pipeline (including the streams passed to pumpify).\n\n### Using `setPipeline(s1, s2, ...)`\n\nSimilar to [duplexify](https://github.com/mafintosh/duplexify) you can also define the pipeline asynchronously using `setPipeline(s1, s2, ...)`\n\n``` js\nvar untar = pumpify()\n\nsetTimeout(function() {\n  // will start draining the input now\n  untar.setPipeline(zlib.createGunzip(), tar.extract('output-folder'))\n}, 1000)\n\nfs.createReadStream('some-gzipped-tarball.tgz').pipe(untar)\n```\n\n## License\n\nMIT\n\n## Related\n\n`pumpify` is part of the [mississippi stream utility collection](https://github.com/maxogden/mississippi) which includes more useful stream modules similar to this one.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mafintosh/pumpify.git"
  },
  "scripts": {
    "test": "tape test.js"
  },
  "version": "1.3.5"
}
